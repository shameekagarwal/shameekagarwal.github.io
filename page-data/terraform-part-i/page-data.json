{"componentChunkName":"component---src-templates-blog-js","path":"/terraform-part-i/","result":{"data":{"markdownRemark":{"fields":{"slug":"/terraform-part-i/"},"id":"1ec9a77e-8754-5ebd-b080-3b0a849e4f5c","html":"<h1 id=\"benefits-of-terraform\" style=\"position:relative;\"><a href=\"#benefits-of-terraform\" aria-label=\"benefits of terraform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Benefits of Terraform</h1>\n<ul>\n<li>since its code, we get benefits like version control</li>\n<li>composition - we can break down infrastructure into reusable components, so that developers would only have to provision these components</li>\n<li>cloud agnostic - available for all popular cloud providers like aws, google cloud, azure</li>\n<li>terraform uses graphs internally to understand how resources depend on each other, which helps deploy dependent resources in order and independent resources in parallel</li>\n</ul>\n<h1 id=\"primary-commands\" style=\"position:relative;\"><a href=\"#primary-commands\" aria-label=\"primary commands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Primary Commands</h1>\n<h3 id=\"terraform-init\" style=\"position:relative;\"><a href=\"#terraform-init\" aria-label=\"terraform init permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform init</code></h3>\n<ul>\n<li>downloads providers, modules, etc. to be able to run</li>\n<li>it’s the first command we run in the terraform source directory</li>\n<li>it creates a .terraform folder which is managed by terraform</li>\n<li>a lock file, .terraform.lock.hcl is generated which helps in locking the exact versions being used</li>\n<li>we can use the flag <code class=\"language-text\">-upgrade</code> so that the versions mentioned in the lock file are ignored and latest possible versions are overwritten to the lock file and installed</li>\n<li>we need to rerun this command when we add a provider, module, update versions, etc.</li>\n</ul>\n<h3 id=\"terraform-validate\" style=\"position:relative;\"><a href=\"#terraform-validate\" aria-label=\"terraform validate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform validate</code></h3>\n<ul>\n<li>validates the syntax we write</li>\n<li>it cannot validate everything e.g. incorrect ec2 ami id</li>\n<li>we can use the flag <code class=\"language-text\">-json</code> to get json output, it can help in configuring pipelines</li>\n</ul>\n<h3 id=\"terraform-plan\" style=\"position:relative;\"><a href=\"#terraform-plan\" aria-label=\"terraform plan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform plan</code></h3>\n<ul>\n<li>it updates the local state according to the infrastructure</li>\n<li>it works like a dry run</li>\n<li>it displays an execution plan which shows the changes terraform will make to update the infrastructure according to the configuration files provided by us</li>\n<li>to output the plan to a local file, use <code class=\"language-text\">terraform plan -out xyz</code> which can then be applied</li>\n<li>different symbols and their meanings -\n<ul>\n<li><code class=\"language-text\">+</code> - created</li>\n<li><code class=\"language-text\">-</code> - destroyed</li>\n<li><code class=\"language-text\">-+</code> - destroyed and then recreated</li>\n<li><code class=\"language-text\">~</code> - updated in place</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"terraform-apply\" style=\"position:relative;\"><a href=\"#terraform-apply\" aria-label=\"terraform apply permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform apply</code></h3>\n<ul>\n<li>applies the execution plan</li>\n<li>we can provide a plan we created using <code class=\"language-text\">terraform apply xyz</code></li>\n<li>we are prompted to approve the plan</li>\n<li>to prevent this prompt, use <code class=\"language-text\">-auto-approve</code> flag</li>\n</ul>\n<h3 id=\"terraform-destroy\" style=\"position:relative;\"><a href=\"#terraform-destroy\" aria-label=\"terraform destroy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform destroy</code></h3>\n<ul>\n<li>deletes all resources created by terraform</li>\n<li>again, to prevent the prompt, use <code class=\"language-text\">-auto-approve</code> flag</li>\n</ul>\n<h3 id=\"terraform-fmt\" style=\"position:relative;\"><a href=\"#terraform-fmt\" aria-label=\"terraform fmt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">terraform fmt</code></h3>\n<ul>\n<li>formats the code</li>\n<li>add <code class=\"language-text\">-recursive</code> flag to format recursively e.g. format modules as well</li>\n<li>add <code class=\"language-text\">-check</code> flag to check the formatting</li>\n</ul>\n<h1 id=\"hashicorp-configuration-language\" style=\"position:relative;\"><a href=\"#hashicorp-configuration-language\" aria-label=\"hashicorp configuration language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashicorp Configuration Language</h1>\n<ul>\n<li>abbreviated as hcl, this is the language we use to write terraform configuration files</li>\n<li>meant to be both machine and human-readable</li>\n<li>it uses <strong>blocks</strong> like settings, provider, resource, data, input variables, local variables, output values, modules</li>\n</ul>\n<h1 id=\"components-of-a-block\" style=\"position:relative;\"><a href=\"#components-of-a-block\" aria-label=\"components of a block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components of a Block</h1>\n<ul>\n<li>each line is an argument, which is a key value pair</li>\n<li>the key is called an identifier and the value is an expression which gets evaluated</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"># Template\n&lt;BLOCK TYPE> \"&lt;BLOCK LABEL>\" \"&lt;BLOCK LABEL>\" {\n  # Block body\n  &lt;IDENTIFIER> = &lt;EXPRESSION> # Argument\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"architecture\" style=\"position:relative;\"><a href=\"#architecture\" aria-label=\"architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Architecture</h1>\n<ul>\n<li>terraform is written in go programming language</li>\n<li>terraform is divided into two parts - terraform core and terraform plugins</li>\n<li>terraform core implements basic functionality like state management, constructing a resource graph, executing plans, using rpc to communicate with terraform plugins, etc.</li>\n<li>terraform plugins extend the functionality by providing implementation e.g. provider for AWS</li>\n</ul>\n<h1 id=\"providers\" style=\"position:relative;\"><a href=\"#providers\" aria-label=\"providers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Providers</h1>\n<ul>\n<li>providers for popular cloud alternatives like aws, azure, gcp, alibaba are already present</li>\n<li>we can look at them at <a href=\"https://registry.terraform.io\">terraform registry</a></li>\n<li><code class=\"language-text\">terraform version</code> - version of terraform core and all installed plugins</li>\n<li><code class=\"language-text\">terraform providers</code> - get why a provider was required e.g. which modules depend on which providers</li>\n<li>when we add a new provider, we have to rerun <code class=\"language-text\">terraform init</code> so that terraform can fetch the required files</li>\n<li>terraform stores the provider in .terraform/providers/provider_name</li>\n</ul>\n<h1 id=\"version-constraints\" style=\"position:relative;\"><a href=\"#version-constraints\" aria-label=\"version constraints permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version Constraints</h1>\n<ul>\n<li>used for specifying version of providers, terraform core, modules, etc. to use. <a href=\"https://www.terraform.io/language/expressions/version-constraints\">docs</a></li>\n<li><code class=\"language-text\">=</code>, <code class=\"language-text\">!=</code>, <code class=\"language-text\">></code>, <code class=\"language-text\">>=</code>, <code class=\"language-text\">&lt;</code>, <code class=\"language-text\">&lt;</code> are self explanatory</li>\n<li><code class=\"language-text\">~=</code> - only the rightmost portion (patch) can be incremented</li>\n</ul>\n<h1 id=\"terraform-block-and-required-providers\" style=\"position:relative;\"><a href=\"#terraform-block-and-required-providers\" aria-label=\"terraform block and required providers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Terraform Block and Required Providers</h1>\n<ul>\n<li>terraform block e.g.\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># terraform core version</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 1.0.0\"</span>\n\n  <span class=\"token comment\"># which providers to use and from where</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"3.74.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>in the terraform block, <code class=\"language-text\">required_providers</code> block is actually optional and a best practice</li>\n<li>if we just provision a resource like an ec2 instance, terraform itself will understand and automatically download the aws provider related code, without us ever writing <code class=\"language-text\">required_providers</code></li>\n<li>e.g. just use the below code in main.tf and run <code class=\"language-text\">terraform init</code>. there is no failure\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web_server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">ami</span>           <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ami-0a8b4cd432b1c3063\"</span>\n  <span class=\"token property\">instance_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"providing-aws-credentials\" style=\"position:relative;\"><a href=\"#providing-aws-credentials\" aria-label=\"providing aws credentials permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Providing AWS Credentials</h1>\n<ul>\n<li>there are multiple ways of providing aws credentials <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#authentication\">docs</a></li>\n<li>specify which profile to use, (created using <code class=\"language-text\">aws configure</code>)</li>\n<li>it cannot be reused easily when we switch to for e.g. terraform cloud\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">profile</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform\"</span>\n  <span class=\"token property\">region</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>so, providing environment variables like <code class=\"language-text\">AWS_ACCESS_KEY_ID</code>, <code class=\"language-text\">AWS_SECRET_ACCESS_KEY</code>, <code class=\"language-text\">AWS_DEFAULT_REGION</code> might be an easier option</li>\n</ul>\n<h1 id=\"resource\" style=\"position:relative;\"><a href=\"#resource\" aria-label=\"resource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resource</h1>\n<ul>\n<li>each resource block represents one or multiple infrastructure objects</li>\n<li>using arguments, we can specify configuration for these infrastructure objects, e.g.\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">ami</span>           <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ami-0a8b4cd432b1c3063\"</span>\n  <span class=\"token property\">instance_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li><code class=\"language-text\">aws_instance</code> is the resource type, <code class=\"language-text\">server</code> is a name given to it</li>\n<li>now, we can reference this resource anywhere in the code using <code class=\"language-text\">aws_instance.server</code></li>\n<li><a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance\">docs</a>\nhave argument references and attribute references,</li>\n<li><strong>argument references</strong> - what we specify inside the resource to configure it</li>\n<li><strong>attribute references</strong> - properties of a resource. they can be used to, configure other resources</li>\n<li>e.g. of argument references and attribute references -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"random_id\"</span></span> <span class=\"token string\">\"random_gen\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">byte_length</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">16</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"s3_storage\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform-storage-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>random_id<span class=\"token punctuation\">.</span>random_gen<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"private\"</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"s3_storage\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"input-variables\" style=\"position:relative;\"><a href=\"#input-variables\" aria-label=\"input variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Input Variables</h1>\n<h3 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h3>\n<ul>\n<li>also called variables sometimes</li>\n<li>it can have the following identifiers - <code class=\"language-text\">type</code>, <code class=\"language-text\">description</code>, <code class=\"language-text\">default</code>, <code class=\"language-text\">sensitive</code>, <code class=\"language-text\">validation</code></li>\n<li>by convention, we put all input variable declarations in variables.tf</li>\n<li>variables.tf -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"subnet_az\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"availability zone for subnet\"</span>\n  <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">default</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1a\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"subnet_cidr\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"cidr for subnet\"</span>\n  <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">default</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"172.31.96.0/20\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>using the variables in main.tf -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_subnet\"</span></span> <span class=\"token string\">\"custom_subnet\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> var.subnet_az\n  <span class=\"token property\">cidr_block</span>        <span class=\"token punctuation\">=</span> var.subnet_cidr\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"custom_subnet\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h3 id=\"validation\" style=\"position:relative;\"><a href=\"#validation\" aria-label=\"validation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validation</h3>\n<p>we use attributes <code class=\"language-text\">condition</code> and <code class=\"language-text\">error_message</code></p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"cloud\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n\n  <span class=\"token keyword\">validation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">condition</span>     <span class=\"token punctuation\">=</span> contains(<span class=\"token punctuation\">[</span><span class=\"token string\">\"aws\"</span>, <span class=\"token string\">\"gcp\"</span>, <span class=\"token string\">\"azure\"</span><span class=\"token punctuation\">]</span>, lower(var.cloud))\n    <span class=\"token property\">error_message</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"You must use an approved cloud.\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">validation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">condition</span>     <span class=\"token punctuation\">=</span> var.cloud <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> lower(var.cloud)\n    <span class=\"token property\">error_message</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Cloud name should be in all lower case.\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"assigning-values\" style=\"position:relative;\"><a href=\"#assigning-values\" aria-label=\"assigning values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assigning Values</h3>\n<ul>\n<li>there are multiple ways to provide values to these variables, some have been described here</li>\n<li>so, these multiple ways have a <a href=\"https://www.terraform.io/language/values/variables#variable-definition-precedence\">precedence order</a></li>\n<li>we can make input variables act like environment variables by prefixing with <code class=\"language-text\">TF_VAR_</code>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">export TF_VAR_name=web_server\nexport TF_VAR_environment=dev</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>we can also set them in the file terraform.tfvars, just using key value pairs\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">name = web_server\nenvironment = dev</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>terraform automatically picks up such files -\n<ul>\n<li>with name terraform.tfvars</li>\n<li>file name ending with .auto.tfvars</li>\n</ul>\n</li>\n<li>we can also pass it via cli <code class=\"language-text\">terraform apply -var name=web_server -var environment=dev</code></li>\n</ul>\n<h3 id=\"sensitive\" style=\"position:relative;\"><a href=\"#sensitive\" aria-label=\"sensitive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sensitive</h3>\n<ul>\n<li>input variables have an attribute called sensitive</li>\n<li>marking as <code class=\"language-text\">sensitive = true</code> only hides them from console outputs, the value can still be seen in state files</li>\n<li>this way, only people having access to state can see the values (e.g. if state is stored in s3), not others from sources like build pipeline outputs</li>\n<li>one way to handle secrets is to use environment variables, by prefixing with <code class=\"language-text\">TF_VAR_</code></li>\n<li>we can use <code class=\"language-text\">export</code> to set it locally and not check it into the version control system</li>\n<li>another way for more control is to use hashicorp vault</li>\n</ul>\n<h1 id=\"local-variables\" style=\"position:relative;\"><a href=\"#local-variables\" aria-label=\"local variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local Variables</h1>\n<ul>\n<li>local variables are like input variables but have lesser features</li>\n<li>a use case is to store results of expressions to avoid repeating expressions everywhere</li>\n<li>we can have multiple <code class=\"language-text\">locals</code> block declarations</li>\n<li>use via object <code class=\"language-text\">local</code> e.g. <code class=\"language-text\">local.environment</code></li>\n<li>used for storing intermediate results to avoid repetition, e.g. sharing common tags across all resources\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">common_tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform_demo\"</span>\n    <span class=\"token property\">Environment</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"dev\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># other arguments...</span>\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> local.common_tags\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"data\" style=\"position:relative;\"><a href=\"#data\" aria-label=\"data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data</h1>\n<ul>\n<li>we can query infrastructure not managed by terraform e.g. the default vpc in aws. <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/vpc\">docs</a></li>\n<li>once terraform grabs information about this, we can use its attribute references in our configuration. e.g. -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">data <span class=\"token type variable\">\"aws_vpc\"</span></span> <span class=\"token string\">\"default_vpc\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-07e636jj690eb6a77\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_subnet\"</span></span> <span class=\"token string\">\"web_server_subnet\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># other arguments...</span>\n  <span class=\"token property\">vpc_id</span> <span class=\"token punctuation\">=</span> data.aws_vpc.default_vpc.id\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"output\" style=\"position:relative;\"><a href=\"#output\" aria-label=\"output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Output</h1>\n<ul>\n<li>allows us output structured data</li>\n<li>it can be used as an input for automation tools or other modules</li>\n<li>by convention, placed inside outputs.tf</li>\n<li>we can run <code class=\"language-text\">terraform output</code> to get the output</li>\n<li>we can use <code class=\"language-text\">terraform output -json</code> and use jq library to parse the json to use the output elsewhere</li>\n<li>another way to use the output - <code class=\"language-text\">ping $(terraform output -raw web_server_public_ip)</code></li>\n<li>just like input variables, marking as <code class=\"language-text\">sensitive = true</code> only hides them from console outputs, but their values can still be seen in the state files. e.g. -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">output<span class=\"token type variable\"> \"web_server_public_ip\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> aws_instance.web_server.public_ip\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"provisioners\" style=\"position:relative;\"><a href=\"#provisioners\" aria-label=\"provisioners permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Provisioners</h1>\n<ul>\n<li>model actions on the remote or local machine</li>\n<li>local machine - what terraform is running on</li>\n<li>remote machine - e.g. ec2 instances created by terraform</li>\n<li><code class=\"language-text\">local-exec</code> - execute commands on the local machine</li>\n<li><code class=\"language-text\">remote-exec</code> - execute commands on the remote machine. requires connection block as well</li>\n<li><code class=\"language-text\">file-exec</code> - copy files from the local machine to the remote machine</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web_server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># other arguments...</span>\n\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"chmod 600 <span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>local_file<span class=\"token punctuation\">.</span>web_server_private_key<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">connection</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">user</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ubuntu\"</span>\n    <span class=\"token property\">private_key</span> <span class=\"token punctuation\">=</span> tls_private_key.web_server_key_pair_gen.private_key_pem\n    <span class=\"token property\">host</span>        <span class=\"token punctuation\">=</span> self.public_ip\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"remote-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">inline</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"sudo apt update -y\"</span>,\n      <span class=\"token string\">\"sudo apt upgrade -y\"</span>,\n      <span class=\"token string\">\"sudo apt install apache2 -y\"</span>,\n      <span class=\"token string\">\"sudo systemctl status apache2 --no-pager\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>full example <a href=\"https://gist.github.com/shameekagarwal/ac6da45db53cab28aec80723cbfc4a86\">here</a>. issues addressed by the example -</p>\n<ul>\n<li>using ami lookup to get the ubuntu image</li>\n<li>security group with rules for ports 80 and 22 and then attaching it to ec2</li>\n<li>creating a key pair, where the public key is attached to ec2 and private key is downloaded locally</li>\n<li><code class=\"language-text\">remote-exec</code> to install the apache server on ec2</li>\n<li><code class=\"language-text\">local-exec</code> to set permissions of the private key pair</li>\n</ul>\n<h1 id=\"replace\" style=\"position:relative;\"><a href=\"#replace\" aria-label=\"replace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Replace</h1>\n<ul>\n<li>when we change the scripts inside local-exec and remote-exec, the infrastructure won’t be recreated</li>\n<li>to enforce recreating, we can use <code class=\"language-text\">terraform apply -replace=aws_instance.web_server</code></li>\n<li>its deprecated alternative is <code class=\"language-text\">terraform taint</code></li>\n</ul>\n<h1 id=\"taint\" style=\"position:relative;\"><a href=\"#taint\" aria-label=\"taint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Taint</h1>\n<ul>\n<li>taint helps in marking a resource manually so that it can be recreated</li>\n<li>in the following example, remote-exec provisioner will fail because of the exit</li>\n<li>when the instance is created, this will fail, though other resources will be created</li>\n<li>when we run <code class=\"language-text\">terraform state show aws_instance.web_server</code>, we see the instance is marked as tainted</li>\n<li>this means the next time we run apply, terraform will try to create it again</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web_server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># other arguments...</span>\n\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"remote-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">inline</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"exit 2\"</span>,\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"import\" style=\"position:relative;\"><a href=\"#import\" aria-label=\"import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import</h1>\n<ul>\n<li>data blocks are used to reference infrastructure not managed by terraform</li>\n<li>import can be used to start managing infrastructure which was not initially managed by terraform</li>\n<li>e.g. of where to look in <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#import\">docs</a></li>\n</ul>\n<p>steps -</p>\n<ol>\n<li>launch an instance manually</li>\n<li>create a main.tf with resource as below -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"server\"</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>run <code class=\"language-text\">terraform import aws_instance.server i-050a8498ca4ff9de1</code></li>\n<li>our state is now successfully tracking the resource, but our configuration is incomplete</li>\n<li>commands like <code class=\"language-text\">terraform plan</code> give an error, asking to state the “required arguments”</li>\n<li>we can run <code class=\"language-text\">terraform state show aws_instance.server</code> to get the different attributes</li>\n<li>now we can accordingly update the main.tf file, e.g.\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">ami</span>           <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ami-0a8b4cd432b1c3063\"</span>\n  <span class=\"token property\">instance_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ol>\n<h1 id=\"workspaces\" style=\"position:relative;\"><a href=\"#workspaces\" aria-label=\"workspaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Workspaces</h1>\n<ul>\n<li>this is about managing terraform workspace locally</li>\n<li>helps in managing different environments like development, production using terraform</li>\n<li>by default, we are in the workspace default</li>\n<li><code class=\"language-text\">terraform workspace show</code> shows the current workspace</li>\n<li><code class=\"language-text\">terraform workspace new development</code> - create and switch to workspace development</li>\n<li><code class=\"language-text\">terraform workspace list</code> - shows all the workspaces with the current workspace marked</li>\n<li><code class=\"language-text\">terraform workspace select default</code> - switch to the workspace default</li>\n<li>note: <code class=\"language-text\">terraform workspace select ...</code> is not like <code class=\"language-text\">git switch</code> i.e. the code files always remain the same, its just that there are “different states” maintained for the different workspaces i.e. using <code class=\"language-text\">terraform apply</code> will affect the state of the workspace that we are in</li>\n<li>e.g. -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">ami</span>           <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ami-0a8b4cd432b1c3063\"</span>\n  <span class=\"token property\">instance_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Name\"</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">terraform</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">workspace</span><span class=\"token punctuation\">}</span></span>Server\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>we create a new workspace development, production resources are in the default workspace</li>\n<li>we can now create two instances, one each for development and default workspace</li>\n<li>we can assign different names to the ec2 instances based on the variable <code class=\"language-text\">terraform.workspace</code></li>\n</ul>\n<h1 id=\"module\" style=\"position:relative;\"><a href=\"#module\" aria-label=\"module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Module</h1>\n<ul>\n<li>using modules, we can group different infrastructure components into a reusable container</li>\n<li>we can either use terraform registry for remote public modules or develop modules locally</li>\n<li>by convention, local modules are saved under the folder modules/local_module_name/</li>\n<li>when we add a new remote module, we have to rerun <code class=\"language-text\">terraform init</code>, and the module gets downloaded under .terraform/modules/module_name/</li>\n<li>we work in the root module by default</li>\n<li>when we run terraform apply, it only looks for .tf files in the current directory, and it is not recursive in nature i.e. it does not look inside nested directories</li>\n<li>this feature of terraform is used while creating modules i.e. local modules are inside nested directories</li>\n<li>modules can come from different sources like local, remote, github, etc. <a href=\"https://www.terraform.io/language/modules/sources\">docs</a></li>\n<li>we use public module registry to utilize modules by others. <a href=\"https://registry.terraform.io/browse/modules\">docs</a></li>\n<li>terraform modules can have input and outputs</li>\n<li>for organizing code, we break modules into main.tf, variables.tf, outputs.tf</li>\n<li>we use <a href=\"#input-variables\">input variables</a> for inputs to a module and <a href=\"#output\">outputs</a> for outputs from a module</li>\n<li>only outputs of child modules can be used inside root modules i.e. we cannot reference resources of child modules to utilize argument references directly</li>\n<li>terraform uses .terraform/modules/remote_module_name for storing remote module</li>\n<li>.terraform/modules/module.json has meta information which helps terraform in mapping module blocks</li>\n<li>using modules examples -\n<ul>\n<li><a href=\"https://gist.github.com/shameekagarwal/ab5fdbecdfacea951afd1c0c7d98efab\">Remote Module Example</a> - note keys <code class=\"language-text\">source</code> and <code class=\"language-text\">version</code> inside the module</li>\n<li><a href=\"https://gist.github.com/shameekagarwal/1b2b336fb6a4443569e3265d78a604bd\">Local Module Example</a> - note the passing and usage of inputs and outputs</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Terraform - Part I"}}},"pageContext":{"id":"1ec9a77e-8754-5ebd-b080-3b0a849e4f5c"}},"staticQueryHashes":["1037383464","1617985380"]}