{"componentChunkName":"component---src-templates-blog-js","path":"/terraform-part-ii/","result":{"data":{"markdownRemark":{"fields":{"slug":"/terraform-part-ii/"},"id":"1c9f9b87-74fa-587e-908f-cbeef8ed011c","html":"<h1 id=\"state\" style=\"position:relative;\"><a href=\"#state\" aria-label=\"state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State</h1>\n<ul>\n<li>state helps connect the terraform configuration we write to the infrastructure</li>\n<li>terraform can create, update, or destroy resources when we ask terraform to execute a change</li>\n<li>it makes these decisions based on the old state, executes the changes and then updates the state</li>\n<li>we should not modify the state directly ourselves</li>\n<li><code class=\"language-text\">terraform show</code> - shows the state i.e. all resources</li>\n<li><code class=\"language-text\">terraform state list</code> - displays a list of resources being managed by terraform</li>\n<li><code class=\"language-text\">terraform state show aws_instance.web_server</code> - shows the state of a particular resource</li>\n<li><code class=\"language-text\">terraform refresh</code> - update the local state by fetching the changes that may have happened to the infrastructure being tracked by terraform</li>\n<li><code class=\"language-text\">terraform refresh</code> is automatically run as a part of <code class=\"language-text\">terraform plan</code></li>\n<li><code class=\"language-text\">terraform plan</code> is automatically run as a part of <code class=\"language-text\">terraform apply</code></li>\n<li>where the terraform state is located and operated upon is determined by “backend”</li>\n<li>by default, terraform uses local backend, wherein the state is stored in the terraform.tfstate file</li>\n<li>a backup is also maintained by terraform at terraform.tfstate.backup</li>\n<li>specifying the default strategy explicitly -\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">backend<span class=\"token type variable\"> \"local\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">path</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform.tfstate\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<h1 id=\"state-locking\" style=\"position:relative;\"><a href=\"#state-locking\" aria-label=\"state locking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State Locking</h1>\n<ul>\n<li>suppose we run <code class=\"language-text\">terraform apply</code> in one terminal</li>\n<li>instead of answering the prompt, we again run <code class=\"language-text\">terraform apply</code> in a different terminal</li>\n<li>we get <code class=\"language-text\">Error: Error acquiring the state lock</code></li>\n<li>at a time, only one client can modify the state</li>\n<li>we can also see the momentarily created file called .terraform.tfstate.lock.info</li>\n<li>we can specify a lock timeout e.g. <code class=\"language-text\">terraform apply -auto-approve -lock-timeout=60s</code>, which means the current terminal will wait for 60s for the lock to be freed, else it would time out</li>\n<li>not all remote state backends allow state locking</li>\n</ul>\n<h1 id=\"backend\" style=\"position:relative;\"><a href=\"#backend\" aria-label=\"backend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Backend</h1>\n<ul>\n<li>we can also store state remotely e.g. we can store state in s3, terraform cloud</li>\n<li>we can also use http backends i.e. a server which allows crud. refer <a href=\"https://www.terraform.io/language/settings/backends/http\">docs</a></li>\n<li><a href=\"https://www.terraform.io/language/settings/backends\">earlier</a>, terraform used to divide backends into standard backend and enhanced backend</li>\n<li><strong>standard backend</strong> - store state remotely, perform operations locally e.g. s3</li>\n<li><strong>enhanced backend</strong> - store state remotely, perform operations remotely e.g. terraform cloud</li>\n<li>we can use <code class=\"language-text\">terraform init -migrate-state</code> when we change the backend e.g. local to remote backend</li>\n<li>we can use <code class=\"language-text\">terraform init -reconfigure</code> when we want to ignore the current stored state and reinitialize it</li>\n</ul>\n<h1 id=\"s3-backend\" style=\"position:relative;\"><a href=\"#s3-backend\" aria-label=\"s3 backend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>S3 Backend</h1>\n<ul>\n<li>manually create a bucket beforehand i.e. the s3 bucket used to stored state won’t be managed by terraform</li>\n<li>while using s3, we should enable “versioning” and “encryption” in buckets</li>\n<li>for implementing state locking in s3 while using terraform, we need to connect with dynamodb</li>\n<li>we can view the lock in the dynamo db table, if we leave the prompt after terraform apply hanging</li>\n<li>note: I had to specify the <code class=\"language-text\">profile</code> identifier twice i.e. under the <code class=\"language-text\">backend</code> and for the <code class=\"language-text\">provider</code></li>\n<li>else we could have used environment variables <code class=\"language-text\">AWS_ACCESS_KEY_ID</code> and <code class=\"language-text\">AWS_SECRET_ACCESS_KEY</code></li>\n<li>encryption of state is maintained by tls in transit and aes-256 mechanism on server</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.1.0\"</span>\n\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"3.74.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">profile</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform\"</span>\n    <span class=\"token property\">bucket</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"standard-backend-sf26vkx51wokpza4be9p\"</span>\n    <span class=\"token property\">key</span>            <span class=\"token punctuation\">=</span> <span class=\"token string\">\"prod\"</span>\n    <span class=\"token property\">region</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n    <span class=\"token property\">encrypt</span>        <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">dynamodb_table</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"standard-backend-lock\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">profile</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform\"</span>\n  <span class=\"token property\">region</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># code for resources...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"remote-backend\" style=\"position:relative;\"><a href=\"#remote-backend\" aria-label=\"remote backend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remote Backend</h1>\n<ul>\n<li>create an account in terraform cloud</li>\n<li>run <code class=\"language-text\">terraform login</code>, create an api token in the web browser and enter it into the prompt</li>\n<li>create an organization and a workspace inside the organization</li>\n<li>even though we run commands from terminal, they are actually executed in the cloud</li>\n<li>the output is streamed to our terminal</li>\n<li>for authentication, <code class=\"language-text\">AWS_ACCESS_KEY_ID</code>, <code class=\"language-text\">AWS_SECRET_ACCESS_KEY</code> optionally <code class=\"language-text\">AWS_DEFAULT_REGION</code> in the workspace itself</li>\n<li>it has inbuilt state locking, no extra step like s3 backend is needed</li>\n</ul>\n<h3 id=\"method-1\" style=\"position:relative;\"><a href=\"#method-1\" aria-label=\"method 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method 1</h3>\n<p><a href=\"https://www.terraform.io/language/settings/backends/remote\">new and preferred</a>, but couldn’t support partial backend configuration when I tried</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.1.0\"</span>\n\n  <span class=\"token comment\"># required_providers...</span>\n\n  <span class=\"token keyword\">cloud</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">organization</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"shameek\"</span>\n    <span class=\"token keyword\">workspaces</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"learning-terraform\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># code for resources...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"method-2\" style=\"position:relative;\"><a href=\"#method-2\" aria-label=\"method 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method 2</h3>\n<p>older, supports partial backend configuration when I tried</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.1.0\"</span>\n\n  <span class=\"token comment\"># required_providers...</span>\n\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"remote\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">hostname</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"app.terraform.io\"</span>\n    <span class=\"token property\">organization</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"shameek\"</span>\n\n    <span class=\"token keyword\">workspaces</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"learning-terraform\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># code for resources...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"collection-types\" style=\"position:relative;\"><a href=\"#collection-types\" aria-label=\"collection types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection Types</h1>\n<ul>\n<li>primitive types - string, number, bool</li>\n<li>complex or collection or structure types - list, tuple, map</li>\n<li>list vs tuple - in a list all elements are of same type, not necessarily in tuple</li>\n</ul>\n<p>example using list -</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"us_east_1_azs\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> list(string)\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"us-east-1a\"</span>, <span class=\"token string\">\"us-east-1b\"</span>, <span class=\"token string\">\"us-east-1c\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_subnet\"</span></span> <span class=\"token string\">\"subnet\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">vpc_id</span>            <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-04e232cc690eb2a44\"</span>\n  <span class=\"token property\">cidr_block</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"10.0.200.0/24\"</span>\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> var.us_east_1_azs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>example using <code class=\"language-text\">for_each</code> on map, it iterates over all key-value pairs, so that we can use <code class=\"language-text\">each.key</code> and <code class=\"language-text\">each.value</code> -</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"subnet_cidr_block\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> map(string)\n\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">server</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"10.0.150.0/24\"</span>\n    <span class=\"token property\">worker</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"10.0.250.0/24\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_subnet\"</span></span> <span class=\"token string\">\"subnet\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">for_each</span>          <span class=\"token punctuation\">=</span> var.subnet_cidr_block\n  <span class=\"token property\">vpc_id</span>            <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-04e232cc690eb2a44\"</span>\n  <span class=\"token property\">cidr_block</span>        <span class=\"token punctuation\">=</span> each.value\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1a\"</span>\n  <span class=\"token keyword\">tags</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>each<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span></span>_subnet\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"built-in-functions\" style=\"position:relative;\"><a href=\"#built-in-functions\" aria-label=\"built in functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Built-In Functions</h1>\n<p>there are different categories of functions like numeric functions, string functions, etc. <a href=\"https://www.terraform.io/language/functions\">docs</a></p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"vpc_cidr\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"10.0.0.0/16\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">subnet_arr</span> <span class=\"token punctuation\">=</span> range(<span class=\"token number\">3</span>)\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">output<span class=\"token type variable\"> \"public_subnet_1\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> cidrsubnet(var.vpc_cidr, <span class=\"token number\">8</span>, local.subnet_arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>)\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">output<span class=\"token type variable\"> \"public_subnet_2\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> cidrsubnet(var.vpc_cidr, <span class=\"token number\">8</span>, local.subnet_arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>)\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">output<span class=\"token type variable\"> \"public_subnet_3\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> cidrsubnet(var.vpc_cidr, <span class=\"token number\">8</span>, local.subnet_arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>)\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># public_subnet_1 = \"10.0.0.0/24\"</span>\n<span class=\"token comment\"># public_subnet_2 = \"10.0.1.0/24\"</span>\n<span class=\"token comment\"># public_subnet_3 = \"10.0.2.0/24\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"dynamic-block\" style=\"position:relative;\"><a href=\"#dynamic-block\" aria-label=\"dynamic block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Block</h1>\n<ul>\n<li><strong>generates nested blocks</strong> for each element of the array</li>\n<li>it helps in refactoring, code reuse</li>\n<li>the name of the dynamic block is used to reference each element of the array</li>\n</ul>\n<p>initial -</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_security_group\"</span></span> <span class=\"token string\">\"server_security_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"server_security_group\"</span>\n  <span class=\"token property\">vpc_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-04e232cc690eb2a44\"</span>\n\n  <span class=\"token keyword\">ingress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Port 443\"</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">443</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">443</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">ingress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Port 80\"</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>final -</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">server_security_group_ingress</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token property\">port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">443</span>, <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"https traffic\"</span>, <span class=\"token property\">protocol</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span> <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">{</span> <span class=\"token property\">port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>, <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"http traffic\"</span>, <span class=\"token property\">protocol</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_security_group\"</span></span> <span class=\"token string\">\"server_security_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"server_security_group\"</span>\n  <span class=\"token property\">vpc_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-04e232cc690eb2a44\"</span>\n\n  dynamic <span class=\"token string\">\"ingress\"</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> locals.server_security_group_ingress\n    <span class=\"token keyword\">content</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> ingress.value.description\n      <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> ingress.value.port\n      <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> ingress.value.port\n      <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> ingress.value.protocol\n      <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"lifecycle\" style=\"position:relative;\"><a href=\"#lifecycle\" aria-label=\"lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lifecycle</h1>\n<ul>\n<li>terraform resources have a lifecycle</li>\n<li>we can alter this behavior by setting it to <code class=\"language-text\">create_before_destroy</code></li>\n<li>e.g. we have a security group attached to an ec2</li>\n<li>if we make a modification e.g. change the name of security group in the configuration</li>\n<li><code class=\"language-text\">terraform apply</code> will fail because the ec2 depends on the security group, thus causing a dependency violation</li>\n<li>we can therefore use the <code class=\"language-text\">create_before_destroy</code> flag and the operation would succeed</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-hcl line-numbers\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_security_group\"</span></span> <span class=\"token string\">\"web_server_security_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"web_server_security_group_upd\"</span>\n  <span class=\"token property\">vpc_id</span> <span class=\"token punctuation\">=</span> data.aws_vpc.default_vpc.id\n\n  <span class=\"token keyword\">ingress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"http\"</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">lifecycle</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">create_before_destroy</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web_server\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">ami</span>                    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ami-0a8b4cd432b1c3063\"</span>\n  <span class=\"token property\">instance_type</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n  <span class=\"token property\">vpc_security_group_ids</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>aws_security_group.web_server_security_group.id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>we can also add <code class=\"language-text\">prevent_destroy = true</code> inside the lifecycle block</li>\n<li>this way the resource never gets deleted even if the plan requires it to be destroyed</li>\n</ul>\n<h1 id=\"terraform-cloud\" style=\"position:relative;\"><a href=\"#terraform-cloud\" aria-label=\"terraform cloud permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Terraform Cloud</h1>\n<ul>\n<li>when we create a new workspace within terraform cloud, we get to select the type of workflow we want</li>\n<li>workflow can be version control, cli driven or api driven</li>\n<li>in terraform cloud, each workspace can represent an environment like development, production, etc</li>\n<li>variable sets, found under settings for the organization, help create variables that can be shared between workspaces in an organization e.g. aws credentials can be common for dev and prod environments</li>\n<li>each workspace is made to track a particular remote branch of the vcs</li>\n<li>we can set the branch to track in the vcs workflow, so that once a push is made to that branch, terraform cloud will automatically trigger a <code class=\"language-text\">terraform apply</code></li>\n<li>remember in this flow, the terraform version to use, the aws credentials to use, even the workspace to use, etc all is done through terraform cloud and not via our configuration files</li>\n</ul>\n<h1 id=\"partial-backend-configuration\" style=\"position:relative;\"><a href=\"#partial-backend-configuration\" aria-label=\"partial backend configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Partial Backend Configuration</h1>\n<ul>\n<li>note: this would apply if we specify the workspace to use through our local configuration</li>\n<li>we cannot use variables for terraform backend e.g. use string interpolation etc</li>\n<li>partial backends helps us use the same code for different backends</li>\n<li>so, we can create a file dev.hcl, with contents <code class=\"language-text\">workspaces { name = \"terraform-cloud-dev\" }</code></li>\n<li>we can start with <code class=\"language-text\">terraform init -backend-config=dev.hcl -reconfigure</code></li>\n<li>note: <code class=\"language-text\">-reconfigure</code> helps in ignoring earlier saved state</li>\n<li>similarly, for production, first run the init command with prod.hcl and then use commands like <code class=\"language-text\">apply</code></li>\n</ul>","frontmatter":{"title":"Terraform - Part II"}}},"pageContext":{"id":"1c9f9b87-74fa-587e-908f-cbeef8ed011c"}},"staticQueryHashes":["1037383464","1617985380"]}